apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kimai.fullname" . }}
  labels:
    {{- include "kimai.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "kimai.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "kimai.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ default (include "kimai.fullname" .) .Values.serviceAccount.name }}
      containers:
        - name: kimai
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 80
          # ConfigMap / Secret for other Kimai settings
          envFrom:
            - configMapRef:
                name: {{ include "kimai.fullname" . }}-config
            - secretRef:
                name: {{ include "kimai.fullname" . }}-secret
          # Explicit DB connection environment variables
          env:
            - name: DATABASE_HOST
              value: "{{ .Values.database.host }}"
            - name: DATABASE_PORT
              value: "{{ .Values.database.port }}"
            - name: DATABASE_NAME
              value: "{{ .Values.database.name }}"
            - name: DATABASE_USER
              value: "{{ .Values.database.user }}"
            - name: DATABASE_PASSWORD
              value: "{{ .Values.database.password }}"
            - name: DATABASE_URL
              value: "mysql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"

          volumeMounts:
            - name: kimai-data
              mountPath: /opt/kimai/var
  volumeClaimTemplates:
    - metadata:
        name: kimai-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "{{ .Values.persistence.storageClassName }}"
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
