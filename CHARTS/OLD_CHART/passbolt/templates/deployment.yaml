apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    app: {{ .Values.deployment.labels  }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.deployment.labels  }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Values.deployment.labels  }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: check-db-ready
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z -w3 {{ .Values.database.host }} {{ .Values.database.port }}; do echo waiting for database; sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            # Database configuration
            - name: DATASOURCES_DEFAULT_HOST
              value: {{ .Values.database.host | quote }}
            - name: DATASOURCES_DEFAULT_PORT
              value: {{ .Values.database.port | quote }}
            - name: DATASOURCES_DEFAULT_DATABASE
              value: {{ .Values.database.name | quote }}
            - name: DATASOURCES_DEFAULT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.database.name }}
                  key: username
            - name: DATASOURCES_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.database.name }}
                  key: password
            # LDAP credentials (if enabled)
            {{- if .Values.ldap.enabled }}
            - name: PASSBOLT_LDAP_BIND_DN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.ldap.name  }}
                  key: bind_dn
            - name: PASSBOLT_LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name:  {{ .Values.secret.ldap.name  }}
                  key: bind_password
            {{- end }}

            # SMTP credentials
            - name: PASSBOLT_EMAIL_TRANSPORT_DEFAULT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.smtp.name  }}
                  key: username
                  optional: true
            - name: PASSBOLT_EMAIL_TRANSPORT_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.smtp.name }}
                  key: password
                  optional: true
          envFrom:
            - configMapRef:
                name: {{ .Values.configmap.name }}

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/passbolt
              readOnly: true
            - name: data
              mountPath: /var/www/passbolt/config/gpg
            - name: gpg-keys
              mountPath: /etc/passbolt/gpg/serverkey.asc
              subPath: serverkey.asc
              readOnly: true
            - name: gpg-keys
              mountPath: /etc/passbolt/gpg/serverkey_private.asc
              subPath: serverkey_private.asc
              readOnly: true
            - name: jwt-key
              mountPath: /etc/passbolt/jwt/jwt.key
              subPath: jwt.key
              readOnly: true
      volumes:
        - name: config-volume
          emptyDir: {}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.name  }}
        - name: gpg-keys
          secret:
            secretName: {{ .Values.secret.gpg.name }}
        - name: jwt-key
          secret:
            secretName: {{ .Values.secret.jwt.name }}