# Default values for passbolt.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

configmap:
  name: passbolt-configmap


secret: 
  database:
    name: passbolt-db-secret
  ldap: 
    name: passbolt-ldap-secret
  smtp:
    name: passbolt-smtp-secret
  gpg:
    name: passbolt-gpg-name
  jwt:
    name: passbolt-jwt-secret


deployment:
  name: passbolt-deployment
  labels: passbolt

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: passbolt/passbolt
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "5.0.0-1-pro-non-root"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "passbolt-sa"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  name: passbolt-service 
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  targetPort: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  name: passbolt-ingress 
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: passbolt.com
      paths:
        - path: /
          pathType: Prefix
  tls: 
    - secretName: passbolt-tls
      hosts:
        - pasbolt.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 512Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 90
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /healthz/status
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

persistence:
  enabled: true
  name: passbolt-pvc
  storageClass: ""
  acceesMode: ReadWriteOnce
  size: 1Gi
  
  
# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

database :
  host: "mariadb" 
  port: 3306
  user: "passbolt"
  password: ""
  name: "passbolt"
  existingSecret: ""

ldap:
  enabled: true
  host: "ldap.com"
  port: 389
  useStartTLS: true
  baseDN: "dc=ldap,dc=com"
  userDN: "ou=users,dc=ldap,dc=com"
  bind:
    dn: "cn=admin,dc=ldap,dc=com"
    password: ""  # Should be set via --set or external secrets
  existingSecret: ""  # Reference an existing secret for LDAP credentials
  filter: "(&(objectClass=person)(|(uid=%s)(mail=%s)))"
  attrEmail: "mail"
  attrFirstname: "givenName"
  attrLastname: "sn"
  attrUsername: "uid"

# GPG and JWT encryption configuration
encryption:
  gpg:
    existingSecret: ""  # Use existing secret or auto-generate
    autoGenerate: true  # Auto-generate GPG keys if no secret provided
  jwt:
    existingSecret: ""  # Use existing secret or auto-generate
    autoGenerate: true  # Auto-generate JWT key if no secret provided

# App configuration
app:
  fullBaseUrl: "https://passbolt.com"
  serverName: "Passbolt"
  registrationPublic: false
  emailTransport: "smtp"
  emailFromAddress: "passbolt@example.com"
  emailFromName: "Passbolt"
  emailNotificationsSender: "passbolt@example.com"
  smtpHost: "smtp.com"
  smtpPort: 587
  smtpTLS: true
  smtpUsername: ""
  smtpPassword: ""
  existingSmtpSecret: ""  # Reference an existing secret for SMTP credentials 
# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret

#     optional: false


# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Network policies
networkPolicy:
  enabled: true
  name: passbolt-networkpolicy
  # Allow connections to database
  databaseEgress:
    enabled: true
    port: 3306
    cidr: "10.0.0.0/8"  # Adjust this for your cluster network
  # Allow connections to LDAP server
  ldapEgress:
    enabled: true
    port: 389
    cidr: "10.0.0.0/8"  # Adjust this for your cluster network
  # Allow connections to SMTP server
  smtpEgress:
    enabled: true
    port: 587
    cidr: "0.0.0.0/0"  # Usually SMTP is external

# RBAC configuration
rbac:
  create: true
  name: passbolt-rbac 
  binding: 
    name: passbolt-binding
  rules:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["get", "list", "watch"]

monitoring:
  podMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    path: /healthz
    port: http